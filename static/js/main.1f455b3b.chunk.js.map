{"version":3,"sources":["theme/mainTheme.js","context/index.js","components/Modal/Button/Button.js","components/Modal/Header/Header.js","components/Modal/Content/Content.js","components/Modal/Footer/Footer.js","components/OutsideClick/OutsideClick.js","components/Modal/Modal.js","views/Root.js","index.js"],"names":["theme","gray","white","button","ModalContext","React","createContext","Button","styled","_templateObject","_ref","StyledHeader","div","Header_templateObject","Header","title","toggle","useContext","react_default","a","createElement","Button_Button","onClick","StyledContent","Content_templateObject","Content","children","StyledFooter","Footer_templateObject","Footer","callToActionLabel","alert","OutsideClick","fun","wrapperRef","useRef","ref","useEffect","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","useOutsideClick","Provider","StyledModal","Modal_templateObject","StyledBackDrop","_templateObject2","_ref2","Modal","state","isOpen","_this","setState","_this2","this","value","components_OutsideClick_OutsideClick","props","Component","Root","Fragment","styled_components_browser_esm","components_Modal_Modal","ReactDOM","render","views_Root","getElementById"],"mappings":"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","file":"static/js/main.1f455b3b.chunk.js","sourcesContent":["export const theme = {\n  gray: 'rgba(0,0,0,0.5)',\n  white: 'white',\n  button: 'cadetblue',\n};\n","import React from 'react';\r\n\r\nconst ModalContext = React.createContext();\r\n\r\nexport default ModalContext;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 200px;\r\n  height: 50px;\r\n  margin: 10px;\r\n  font-size: 16px;\r\n  border: none;\r\n  border-radius: 50px;\r\n  background-color: ${({ theme }) => theme.button};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default Button;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport ModalContext from 'context';\r\nimport Button from 'components/Modal/Button/Button';\r\n\r\nconst StyledHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 35px;\r\n`;\r\n\r\nconst Header = ({ title }) => {\r\n  const { toggle } = useContext(ModalContext);\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <h1>{title}</h1>\r\n      <Button onClick={() => toggle()}>Close</Button>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledContent = styled.div`\r\n  margin: 30px 0;\r\n`;\r\n\r\nconst Content = ({ children }) => {\r\n  return <StyledContent>{children}</StyledContent>;\r\n};\r\n\r\nContent.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Content;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport ModalContext from 'context';\r\nimport Button from 'components/Modal/Button/Button';\r\n\r\nconst StyledFooter = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 15vh;\r\n`;\r\n\r\nconst Footer = ({ callToActionLabel }) => {\r\n  const { toggle } = useContext(ModalContext);\r\n\r\n  return (\r\n    <StyledFooter>\r\n      <Button onClick={() => toggle()}>Cancel</Button>\r\n      <Button\r\n        onClick={() => {\r\n          alert('OK');\r\n          toggle();\r\n        }}\r\n      >\r\n        {callToActionLabel}\r\n      </Button>\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  callToActionLabel: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useOutsideClick = (ref, fun) => {\r\n  useEffect(() => {\r\n    const handleClickOutside = e => {\r\n      if (ref.current && !ref.current.contains(e.target)) {\r\n        fun();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [ref]);\r\n};\r\n\r\nconst OutsideClick = ({ children, fun }) => {\r\n  const wrapperRef = useRef(null);\r\n  useOutsideClick(wrapperRef, fun);\r\n\r\n  return <div ref={wrapperRef}>{children}</div>;\r\n};\r\n\r\nOutsideClick.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  fun: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default OutsideClick;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from 'components/Modal/Header/Header';\r\nimport Content from 'components/Modal/Content/Content';\r\nimport Footer from 'components/Modal/Footer/Footer';\r\nimport ModalContext from 'context';\r\nimport Button from 'components/Modal/Button/Button';\r\nimport OutsideClick from 'components/OutsideClick/OutsideClick';\r\n\r\nconst { Provider } = ModalContext;\r\n\r\nconst StyledModal = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 70vw;\r\n  height: 70vh;\r\n  border: 2px solid black;\r\n  padding: 50px;\r\n  z-index: 1000;\r\n  background-color: ${({ theme }) => theme.white};\r\n`;\r\n\r\nconst StyledBackDrop = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  z-index: 10;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: ${({ theme }) => theme.gray};\r\n`;\r\n\r\nclass Modal extends Component {\r\n  state = {\r\n    isOpen: true,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  render() {\r\n    const { isOpen } = this.state;\r\n\r\n    return (\r\n      <Provider value={{ toggle: this.toggle }}>\r\n        {isOpen && <StyledBackDrop />}\r\n        <OutsideClick fun={() => this.setState({ isOpen: false })}>\r\n          <Button onClick={this.toggle}>Modal</Button>\r\n          {isOpen && <StyledModal>{this.props.children}</StyledModal>}\r\n        </OutsideClick>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nModal.Header = Header;\r\nModal.Content = Content;\r\nModal.Footer = Footer;\r\n\r\nexport default Modal;\r\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from 'theme/mainTheme';\nimport Modal from 'components/Modal/Modal';\n\nconst Root = () => (\n  <>\n    <ThemeProvider theme={theme}>\n      <Modal>\n        <Modal.Header title=\"Tytuł modala\" />\n        <Modal.Content>\n          <h1>to powinno tak działać</h1>\n        </Modal.Content>\n        <Modal.Footer callToActionLabel=\"Udało się\" />\n      </Modal>\n    </ThemeProvider>\n  </>\n);\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'views/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}