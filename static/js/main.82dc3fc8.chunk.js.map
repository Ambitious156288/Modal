{"version":3,"sources":["theme/mainTheme.js","context/index.js","components/Modal/Button/Button.js","components/Modal/Header/Header.js","components/Modal/Content/Content.js","components/Modal/Footer/Footer.js","components/OutsideClick/OutsideClick.js","components/Modal/Modal.js","views/Root.js","index.js"],"names":["theme","gray","white","button","ModalContext","React","createContext","Button","styled","_templateObject","_ref","StyledHeader","div","Header_templateObject","Header","title","toggle","useContext","react_default","a","createElement","Button_Button","onClick","defaultProps","StyledContent","Content_templateObject","Content","children","StyledFooter","Footer_templateObject","Footer","callToActionLabel","alert","OutsideClick","fun","wrapperRef","useRef","ref","handleClickOutside","e","current","contains","target","document","addEventListener","useOutsideClick","Provider","StyledModal","Modal_templateObject","StyledBackDrop","_templateObject2","_ref2","Modal","state","isOpen","_this","setState","_this2","this","value","components_OutsideClick_OutsideClick","props","Component","Root","Fragment","styled_components_browser_esm","components_Modal_Modal","ReactDOM","render","views_Root","getElementById"],"mappings":"+KAAaA,EAAQ,CACnBC,KAAM,kBACNC,MAAO,QACPC,OAAQ,yDCCKC,EAFMC,IAAMC,2TCA3B,IAceC,EAdAC,IAAOL,OAAVM,IAUU,SAAAC,GAAA,OAAAA,EAAGV,MAAkBG,iLCN3C,IAAMQ,EAAeH,IAAOI,IAAVC,KAOZC,EAAS,SAAAJ,GAAe,IAAZK,EAAYL,EAAZK,MACRC,EAAWC,qBAAWb,GAAtBY,OAER,OACEE,EAAAC,EAAAC,cAACT,EAAD,KACEO,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAACC,EAAD,CAAQC,QAAS,kBAAMN,MAAvB,WASNF,EAAOS,aAAe,CACpBR,MAAO,qBAGMD,kGC5Bf,IAAMU,EAAgBhB,IAAOI,IAAVa,KAYJC,EARC,SAAAhB,GAAkB,IAAfiB,EAAejB,EAAfiB,SACjB,OAAOT,EAAAC,EAAAC,cAACI,EAAD,KAAgBG,gJCHzB,IAAMC,EAAepB,IAAOI,IAAViB,KAMZC,EAAS,SAAApB,GAA2B,IAAxBqB,EAAwBrB,EAAxBqB,kBACRf,EAAWC,qBAAWb,GAAtBY,OAER,OACEE,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAACC,EAAD,CAAQC,QAAS,kBAAMN,MAAvB,UACAE,EAAAC,EAAAC,cAACC,EAAD,CACEC,QAAS,WACPU,MAAM,MACNhB,MAGDe,KAUTD,EAAOP,aAAe,CACpBQ,kBAAmB,uBAGND,QCTAG,EAZM,SAAAvB,GAAuB,IAApBiB,EAAoBjB,EAApBiB,SAAUO,EAAUxB,EAAVwB,IAC1BC,EAAaC,iBAAO,MAG1B,OAlBsB,SAACC,EAAKH,GAC5B,IAAMI,EAAqB,SAAAC,GACrBF,EAAIG,UAAYH,EAAIG,QAAQC,SAASF,EAAEG,SACzCR,KAIJS,SAASC,iBAAiB,YAAaN,GASvCO,CAAgBV,EAAYD,GAErBhB,EAAAC,EAAAC,cAAA,OAAKiB,IAAKF,GAAaR,2dCZxBmB,EAAa1C,EAAb0C,SAEFC,EAAcvC,IAAOI,IAAVoC,IAUK,SAAAtC,GAAA,OAAAA,EAAGV,MAAkBE,QAGrC+C,EAAiBzC,IAAOI,IAAVsC,IAOE,SAAAC,GAAA,OAAAA,EAAGnD,MAAkBC,OAGrCmD,6MAKJC,MAAQ,CACNC,QAAQ,KAGVtC,OAAS,WACPuC,EAAKC,SAAS,CAAEF,QAASC,EAAKF,MAAMC,kFAG7B,IAAAG,EAAAC,KACCJ,EAAWI,KAAKL,MAAhBC,OAER,OACEpC,EAAAC,EAAAC,cAAC0B,EAAD,CAAUa,MAAO,CAAE3C,OAAQ0C,KAAK1C,SAC7BsC,GAAUpC,EAAAC,EAAAC,cAAC6B,EAAD,MAEX/B,EAAAC,EAAAC,cAACC,EAAD,CAAQC,QAASoC,KAAK1C,QAAtB,SACCsC,GACCpC,EAAAC,EAAAC,cAACwC,EAAD,CAAc1B,IAAK,kBAAMuB,EAAKD,SAAS,CAAEF,QAAQ,MAC/CpC,EAAAC,EAAAC,cAAC2B,EAAD,KAAcW,KAAKG,MAAMlC,UAAwB,aAvBzCmC,aAAdV,EACGtC,OAASA,EADZsC,EAEG1B,QAAUA,EAFb0B,EAGGtB,OAASA,EA4BHsB,QC9CAW,EAdF,kBACX7C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6C,SAAA,KACE9C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAejE,MAAOA,GACpBkB,EAAAC,EAAAC,cAAC8C,EAAD,KACEhD,EAAAC,EAAAC,cAAC8C,EAAMpD,OAAP,CAAcC,MAAM,sBACpBG,EAAAC,EAAAC,cAAC8C,EAAMxC,QAAP,KACER,EAAAC,EAAAC,cAAA,+CAEFF,EAAAC,EAAAC,cAAC8C,EAAMpC,OAAP,CAAcC,kBAAkB,4BCTxCoC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAAU1B,SAAS2B,eAAe","file":"static/js/main.82dc3fc8.chunk.js","sourcesContent":["export const theme = {\r\n  gray: 'rgba(0,0,0,0.5)',\r\n  white: 'white',\r\n  button: 'cadetblue',\r\n};\r\n","import React from 'react';\r\n\r\nconst ModalContext = React.createContext();\r\n\r\nexport default ModalContext;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 200px;\r\n  height: 50px;\r\n  margin: 10px;\r\n  font-size: 16px;\r\n  border: none;\r\n  border-radius: 50px;\r\n  background-color: ${({ theme }) => theme.button};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default Button;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport ModalContext from 'context';\r\nimport Button from 'components/Modal/Button/Button';\r\n\r\nconst StyledHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 35px;\r\n`;\r\n\r\nconst Header = ({ title }) => {\r\n  const { toggle } = useContext(ModalContext);\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <h1>{title}</h1>\r\n      <Button onClick={() => toggle()}>Close</Button>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: 'Tytuł modala',\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledContent = styled.div`\r\n  margin: 30px 0;\r\n`;\r\n\r\nconst Content = ({ children }) => {\r\n  return <StyledContent>{children}</StyledContent>;\r\n};\r\n\r\nContent.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Content;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport ModalContext from 'context';\r\nimport Button from 'components/Modal/Button/Button';\r\n\r\nconst StyledFooter = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 15vh;\r\n`;\r\n\r\nconst Footer = ({ callToActionLabel }) => {\r\n  const { toggle } = useContext(ModalContext);\r\n\r\n  return (\r\n    <StyledFooter>\r\n      <Button onClick={() => toggle()}>Cancel</Button>\r\n      <Button\r\n        onClick={() => {\r\n          alert('OK');\r\n          toggle();\r\n        }}\r\n      >\r\n        {callToActionLabel}\r\n      </Button>\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  callToActionLabel: PropTypes.string,\r\n};\r\n\r\nFooter.defaultProps = {\r\n  callToActionLabel: 'Udało się',\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useOutsideClick = (ref, fun) => {\r\n  const handleClickOutside = e => {\r\n    if (ref.current && !ref.current.contains(e.target)) {\r\n      fun();\r\n    }\r\n  };\r\n\r\n  document.addEventListener('mousedown', handleClickOutside);\r\n\r\n  return () => {\r\n    document.removeEventListener('mousedown', handleClickOutside);\r\n  };\r\n};\r\n\r\nconst OutsideClick = ({ children, fun }) => {\r\n  const wrapperRef = useRef(null);\r\n  useOutsideClick(wrapperRef, fun);\r\n\r\n  return <div ref={wrapperRef}>{children}</div>;\r\n};\r\n\r\nOutsideClick.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  fun: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default OutsideClick;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from 'components/Modal/Header/Header';\r\nimport Content from 'components/Modal/Content/Content';\r\nimport Footer from 'components/Modal/Footer/Footer';\r\nimport ModalContext from 'context';\r\nimport Button from 'components/Modal/Button/Button';\r\nimport OutsideClick from 'components/OutsideClick/OutsideClick';\r\n\r\nconst { Provider } = ModalContext;\r\n\r\nconst StyledModal = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 70vw;\r\n  height: 70vh;\r\n  border: 2px solid black;\r\n  padding: 50px;\r\n  z-index: 1000;\r\n  background-color: ${({ theme }) => theme.white};\r\n`;\r\n\r\nconst StyledBackDrop = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  z-index: 10;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: ${({ theme }) => theme.gray};\r\n`;\r\n\r\nclass Modal extends Component {\r\n  static Header = Header;\r\n  static Content = Content;\r\n  static Footer = Footer;\r\n\r\n  state = {\r\n    isOpen: true,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  render() {\r\n    const { isOpen } = this.state;\r\n\r\n    return (\r\n      <Provider value={{ toggle: this.toggle }}>\r\n        {isOpen && <StyledBackDrop />}\r\n\r\n        <Button onClick={this.toggle}>Modal</Button>\r\n        {isOpen && (\r\n          <OutsideClick fun={() => this.setState({ isOpen: false })}>\r\n            <StyledModal>{this.props.children}</StyledModal>{' '}\r\n          </OutsideClick>\r\n        )}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { theme } from 'theme/mainTheme';\r\nimport Modal from 'components/Modal/Modal';\r\n\r\nconst Root = () => (\r\n  <>\r\n    <ThemeProvider theme={theme}>\r\n      <Modal>\r\n        <Modal.Header title=\"Tytuł modala\" />\r\n        <Modal.Content>\r\n          <h1>to powinno tak działać</h1>\r\n        </Modal.Content>\r\n        <Modal.Footer callToActionLabel=\"Udało się\" />\r\n      </Modal>\r\n    </ThemeProvider>\r\n  </>\r\n);\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from 'views/Root';\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}